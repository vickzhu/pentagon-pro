<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pentagon.system.dao.mapper.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.pentagon.system.dao.model.Department" >
    <id column="dept_id" property="deptId" jdbcType="BIGINT" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_update" property="gmtUpdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dept_id, dept_name, parent_id, enable, gmt_create, gmt_update
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pentagon.system.dao.model.DepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset > -1 and rows > -1" >
      limit ${offset},${rows}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from department
    where dept_id = #{deptId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from department
    where dept_id = #{deptId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pentagon.system.dao.model.DepartmentExample" >
    delete from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pentagon.system.dao.model.Department" >
    <selectKey resultType="java.lang.Long" keyProperty="deptId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into department (dept_name, parent_id, enable, 
      gmt_create, gmt_update)
    values (#{deptName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{enable,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pentagon.system.dao.model.Department" >
    <selectKey resultType="java.lang.Long" keyProperty="deptId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptName != null" >
        dept_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtUpdate != null" >
        gmt_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null" >
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pentagon.system.dao.model.DepartmentExample" resultType="java.lang.Integer" >
    select count(*) from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update department
    <set >
      <if test="record.deptId != null" >
        dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.deptName != null" >
        dept_name = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null" >
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update department
    set dept_id = #{record.deptId,jdbcType=BIGINT},
      dept_name = #{record.deptName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      enable = #{record.enable,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pentagon.system.dao.model.Department" >
    update department
    <set >
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null" >
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pentagon.system.dao.model.Department" >
    update department
    set dept_name = #{deptName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      enable = #{enable,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
    where dept_id = #{deptId,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pentagon.news.dao.mapper.NewsMapper" >
  <resultMap id="BaseResultMap" type="com.pentagon.news.dao.model.News" >
    <id column="news_id" property="newsId" jdbcType="BIGINT" />
    <result column="news_category" property="newsCategory" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="publisher" property="publisher" jdbcType="BIGINT" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="online" property="online" jdbcType="INTEGER" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_update" property="gmtUpdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    news_id, news_category, title, source, publisher, publish_time, state, online, priority, 
    gmt_create, gmt_update
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pentagon.news.dao.model.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset != null and offset > -1" >
      limit ${offset},${rows}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from news
    where news_id = #{newsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from news
    where news_id = #{newsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pentagon.news.dao.model.NewsExample" >
    delete from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pentagon.news.dao.model.News" >
    <selectKey resultType="java.lang.Long" keyProperty="newsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into news (news_category, title, source, 
      publisher, publish_time, state, 
      online, priority, gmt_create, 
      gmt_update)
    values (#{newsCategory,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=BIGINT}, #{publishTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{online,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pentagon.news.dao.model.News" >
    <selectKey resultType="java.lang.Long" keyProperty="newsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsCategory != null" >
        news_category,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="online != null" >
        online,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtUpdate != null" >
        gmt_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsCategory != null" >
        #{newsCategory,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=BIGINT},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="online != null" >
        #{online,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null" >
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pentagon.news.dao.model.NewsExample" resultType="java.lang.Integer" >
    select count(*) from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update news
    <set >
      <if test="record.newsId != null" >
        news_id = #{record.newsId,jdbcType=BIGINT},
      </if>
      <if test="record.newsCategory != null" >
        news_category = #{record.newsCategory,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null" >
        publisher = #{record.publisher,jdbcType=BIGINT},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.online != null" >
        online = #{record.online,jdbcType=INTEGER},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null" >
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update news
    set news_id = #{record.newsId,jdbcType=BIGINT},
      news_category = #{record.newsCategory,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=BIGINT},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      online = #{record.online,jdbcType=INTEGER},
      priority = #{record.priority,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pentagon.news.dao.model.News" >
    update news
    <set >
      <if test="newsCategory != null" >
        news_category = #{newsCategory,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=BIGINT},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="online != null" >
        online = #{online,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null" >
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where news_id = #{newsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pentagon.news.dao.model.News" >
    update news
    set news_category = #{newsCategory,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=BIGINT},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      online = #{online,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
    where news_id = #{newsId,jdbcType=BIGINT}
  </update>
</mapper>